  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>heiniuhaha.github.com/assets/themes/twitter/js/code/prettify.js at master · xutaohit/heiniuhaha.github.com</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="xhr-socket" href="/_sockets">
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="8YZnSA6fVnikCYHj1xHjO+0Ofus2eT9zaHLbANKNr9w=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-3dae77b1344d5de8d1c932d28c3904033713ed8b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-c15137b0b05c94db05fa047ecd589d7a7df41d85.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-010d500708696b4ecee44478b5229d626367e844.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-3faa7311e682eb5f92401a6c1295f98d3fc9eaa8.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="58769555cfd6f51aea069970c0fad714">

        <link data-pjax-transient rel='permalink' href='/xutaohit/heiniuhaha.github.com/blob/fa7027ed8a4b8e22bc3b35ba1dd42b0c05cb837c/assets/themes/twitter/js/code/prettify.js'>
    <meta property="og:title" content="heiniuhaha.github.com"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/xutaohit/heiniuhaha.github.com"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/f21fe3e094f1d00f53946b3951a3a42c?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="heiniuhaha.github.com - 前端开发工程师的随记--黑妞haha"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="xutaohit/heiniuhaha.github.com"/>

    <meta name="description" content="heiniuhaha.github.com - 前端开发工程师的随记--黑妞haha" />

      <meta name="robots" content="noindex, nofollow">
  <link href="https://github.com/xutaohit/heiniuhaha.github.com/commits/master.atom" rel="alternate" title="Recent Commits to heiniuhaha.github.com:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob macintosh vis-public fork env-production  ">
    <div id="wrapper">

      

      
      
      

      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-icon mega-icon-invertocat"></span>
</a>

    <div class="divider-vertical"></div>

    
  <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have unread notifications">
    <span class="mail-status unread"></span>
  </a>
  <div class="divider-vertical"></div>


      <div class="command-bar js-command-bar  ">
            <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" data-username="xutaohit" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="cmdform">

    <input type="hidden" class="js-repository-name-with-owner" value="xutaohit/heiniuhaha.github.com"/>
    <input type="hidden" class="js-repository-branch" value="master"/>
    <input type="hidden" class="js-repository-tree-sha" value="a3cdd7c09f390faf3d52c5e51d04a3fd5e48857d"/>

  <div class="divider-vertical"></div>
</form>
        <ul class="top-nav">
            <li class="explore"><a href="https://github.com/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="http://help.github.com">Help</a></li>
        </ul>
      </div>

    

  

    <ul id="user-links">
      <li>
        <a href="https://github.com/xutaohit" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/f21fe3e094f1d00f53946b3951a3a42c?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> xutaohit
        </a>
      </li>

        <li>
          <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
            <span class="mini-icon mini-icon-create"></span>
          </a>
        </li>

        <li>
          <a href="/settings/profile" id="account_settings"
            class="tooltipped downwards"
            title="Account settings ">
            <span class="mini-icon mini-icon-account-settings"></span>
          </a>
        </li>
        <li>
          <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
        </li>

    </ul>


<div class="js-new-dropdown-contents hidden">
  <ul class="dropdown-menu">
    <li>
      <a href="/new"><span class="mini-icon mini-icon-create"></span> New repository</a>
    </li>
    <li>
        <a href="https://github.com/xutaohit/heiniuhaha.github.com/issues/new"><span class="mini-icon mini-icon-issue-opened"></span> New issue</a>
    </li>
    <li>
    </li>
    <li>
      <a href="/organizations/new"><span class="mini-icon mini-icon-u-list"></span> New organization</a>
    </li>
  </ul>
</div>


    
  </div>
</div>

      

      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">

    <li class="nspr">
      <a href="/xutaohit/heiniuhaha.github.com/pull/new/master" class="button minibutton btn-pull-request" icon_class="mini-icon-pull-request"><span class="mini-icon mini-icon-pull-request"></span>Pull Request</a>
    </li>

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="8YZnSA6fVnikCYHj1xHjO+0Ofus2eT9zaHLbANKNr9w=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="9492520" />

    <div class="select-menu js-menu-container js-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">
          <span class="mini-icon mini-icon-unwatch"></span>
          Unwatch
        </span>
      </span>

      <div class="select-menu-modal-holder js-menu-content">
        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container">

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-watching"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target selected">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

    <li class="js-toggler-container js-social-container starring-container ">
      <a href="/xutaohit/heiniuhaha.github.com/unstar" class="minibutton js-toggler-target star-button starred upwards" title="Unstar this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-remove-star"></span>
        <span class="text">Unstar</span>
      </a>
      <a href="/xutaohit/heiniuhaha.github.com/star" class="minibutton js-toggler-target star-button unstarred upwards" title="Star this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>
        <span class="text">Star</span>
      </a>
      <a class="social-count js-social-count" href="/xutaohit/heiniuhaha.github.com/stargazers">0</a>
    </li>

        <li>
          <a href="/xutaohit/heiniuhaha.github.com/fork" class="minibutton js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="nofollow" data-method="post">
            <span class="mini-icon mini-icon-branch-create"></span>
            <span class="text">Fork</span>
          </a>
          <a href="/xutaohit/heiniuhaha.github.com/network" class="social-count">10</a>
        </li>


</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-repo-forked"></span>
                <span class="author vcard">
                  <a href="/xutaohit" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">xutaohit</span>
                  </a></span> /
                <strong><a href="/xutaohit/heiniuhaha.github.com" class="js-current-repository">heiniuhaha.github.com</a></strong>
                  <span class="fork-flag">
                    <span class="text">forked from <a href="/heiniuhaha/heiniuhaha.github.com">heiniuhaha/heiniuhaha.github.com</a></span>
                  </span>
              </h1>
            </div>

            
  <ul class="tabs">
      <li class="pulse-nav"><a href="/xutaohit/heiniuhaha.github.com/pulse" highlight="pulse" rel="nofollow"><span class="mini-icon mini-icon-pulse"></span></a></li>
    <li><a href="/xutaohit/heiniuhaha.github.com" class="selected" highlight="repo_source repo_downloads repo_commits repo_tags repo_branches">Code</a></li>
    <li><a href="/xutaohit/heiniuhaha.github.com/network" highlight="repo_network">Network</a></li>
    <li><a href="/xutaohit/heiniuhaha.github.com/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>


      <li><a href="/xutaohit/heiniuhaha.github.com/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/xutaohit/heiniuhaha.github.com/graphs" highlight="repo_graphs repo_contributors">Graphs</a></li>

      <li>
        <a href="/xutaohit/heiniuhaha.github.com/settings">Settings</a>
      </li>

  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/xutaohit/heiniuhaha.github.com/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter blank">0</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Find or create a branch…">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item js-navigation-target selected">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/xutaohit/heiniuhaha.github.com/blob/master/assets/themes/twitter/js/code/prettify.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <form accept-charset="UTF-8" action="/xutaohit/heiniuhaha.github.com/branches" class="js-create-branch select-menu-item select-menu-new-item-form js-navigation-item js-navigation-target js-new-item-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="8YZnSA6fVnikCYHj1xHjO+0Ofus2eT9zaHLbANKNr9w=" /></div>

                <span class="mini-icon mini-icon-branch-create select-menu-item-icon"></span>
                <div class="select-menu-item-text">
                  <h4>Create branch: <span class="js-new-item-name"></span></h4>
                  <span class="description">from ‘master’</span>
                </div>
                <input type="hidden" name="name" id="name" class="js-new-item-value">
                <input type="hidden" name="branch" id="branch" value="master" />
                <input type="hidden" name="path" id="branch" value="assets/themes/twitter/js/code/prettify.js" />
              </form> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/xutaohit/heiniuhaha.github.com" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/xutaohit/heiniuhaha.github.com/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/xutaohit/heiniuhaha.github.com/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:6cceaacf7917fb54d51bff8fc1ab2f72 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:6cceaacf7917fb54d51bff8fc1ab2f72 -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xutaohit/heiniuhaha.github.com" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">heiniuhaha.github.com</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xutaohit/heiniuhaha.github.com/tree/master/assets" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">assets</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xutaohit/heiniuhaha.github.com/tree/master/assets/themes" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">themes</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xutaohit/heiniuhaha.github.com/tree/master/assets/themes/twitter" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">twitter</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xutaohit/heiniuhaha.github.com/tree/master/assets/themes/twitter/js" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/xutaohit/heiniuhaha.github.com/tree/master/assets/themes/twitter/js/code" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">code</span></a></span><span class="separator"> / </span><strong class="final-path">prettify.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="assets/themes/twitter/js/code/prettify.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/xutaohit/heiniuhaha.github.com/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/4326de7e172c47e1f7f35021f44f94a1?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/heiniuhaha" rel="author">heiniuhaha</a></span>
    <time class="js-relative-date" datetime="2012-08-13T00:13:18-07:00" title="2012-08-13 00:13:18">August 13, 2012</time>
    <div class="commit-title">
        <a href="/xutaohit/heiniuhaha.github.com/commit/ca0a283221a6eea856d3ad4b3b1d27f5280645f2" class="message">my blog</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/4326de7e172c47e1f7f35021f44f94a1?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/heiniuhaha">heiniuhaha</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/xutaohit/heiniuhaha.github.com/blob/fa7027ed8a4b8e22bc3b35ba1dd42b0c05cb837c/assets/themes/twitter/js/code/prettify.js" data-title="heiniuhaha.github.com/assets/themes/twitter/js/code/prettify.js at master · xutaohit/heiniuhaha.github.com · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>29 lines (28 sloc)</span>
                <span>13.632 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                        <a class="minibutton"
                           href="/xutaohit/heiniuhaha.github.com/edit/master/assets/themes/twitter/js/code/prettify.js"
                           data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
                  <a href="/xutaohit/heiniuhaha.github.com/raw/master/assets/themes/twitter/js/code/prettify.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/xutaohit/heiniuhaha.github.com/blame/master/assets/themes/twitter/js/code/prettify.js" class="button minibutton ">Blame</a>
                  <a href="/xutaohit/heiniuhaha.github.com/commits/master/assets/themes/twitter/js/code/prettify.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">PR_SHOULD_USE_CONTINUATION</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC2'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">!==</span><span class="mi">92</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="s2">&quot;7&quot;</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="mi">8</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;u&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">16</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">32</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">16</span><span class="o">?</span><span class="s2">&quot;\\x0&quot;</span><span class="o">:</span><span class="s2">&quot;\\x&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;\\&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;-&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;[&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;]&quot;</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;\\&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC3'><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;^&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="sr">/\\[bdsw]/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;-&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">]),</span><span class="nx">c</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">]);</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">65</span><span class="o">||</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">122</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">65</span><span class="o">||</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">90</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">65</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">|</span><span class="mi">32</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">90</span><span class="p">)</span><span class="o">|</span><span class="mi">32</span><span class="p">]),</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">97</span><span class="o">||</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">122</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">97</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">&amp;-</span><span class="mi">33</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">122</span><span class="p">)</span><span class="o">&amp;-</span><span class="mi">33</span><span class="p">]))}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="kc">NaN</span><span class="p">,</span><span class="kc">NaN</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;=</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;[&quot;</span><span class="p">];</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span></div><div class='line' id='LC4'><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])));</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">j</span><span class="o">===</span><span class="s2">&quot;(&quot;</span><span class="o">?++</span><span class="nx">i</span><span class="o">:</span><span class="s2">&quot;\\&quot;</span><span class="o">===</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=+</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=-</span><span class="mi">1</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=++</span><span class="nx">t</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">j</span><span class="o">===</span><span class="s2">&quot;(&quot;</span><span class="o">?</span><span class="p">(</span><span class="o">++</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;(?:&quot;</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;\\&quot;</span><span class="o">===</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC5'><span class="p">(</span><span class="nx">j</span><span class="o">=+</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;\\&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="s2">&quot;^&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;^&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;[&quot;</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;\\&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Za-z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;-</span><span class="mi">33</span><span class="p">,</span><span class="nx">a</span><span class="o">|</span><span class="mi">32</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">}));</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="p">)</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/[a-z]/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))){</span><span class="nx">s</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span></div><div class='line' id='LC6'><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">n</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="mi">11</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="mi">13</span><span class="p">},</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">p</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">global</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">multiline</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;(?:&quot;</span><span class="o">+</span><span class="nx">y</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;gi&quot;</span><span class="o">:</span><span class="s2">&quot;g&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">m</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;LI&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="o">++</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">++&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">case</span> <span class="mi">4</span><span class="o">:</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r\n?/g</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\t\n\r ]+/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">,</span><span class="nx">y</span><span class="o">+=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span></div><div class='line' id='LC7'><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">++&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="sr">/(?:^|\s)nocode(?:\s|$)/</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="p">[],</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;white-space&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pre&quot;</span><span class="o">===</span><span class="nx">l</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">:</span><span class="nx">t</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;pln&quot;</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="o">++</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span></div><div class='line' id='LC8'><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])){</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="nx">o</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;pln&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">5</span><span class="o">&amp;&amp;</span><span class="s2">&quot;lang-&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">))</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;src&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">)}</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">length</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">C</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">p</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">)}</span><span class="k">else</span> <span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">p</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">y</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span></div><div class='line' id='LC9'><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">--</span><span class="nx">k</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;)</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">k</span><span class="p">)]</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">p</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">)}</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="sr">/[\S\s]/</span><span class="p">);</span><span class="nx">y</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">l</span><span class="p">)})();</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">tripleQuotedStrings</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^(?:&#39;&#39;&#39;(?:[^&#39;\\]|\\[\S\s]|&#39;&#39;?(?=[^&#39;]))*(?:&#39;&#39;&#39;|$)|&quot;&quot;&quot;(?:[^&quot;\\]|\\[\S\s]|&quot;&quot;?(?=[^&quot;]))*(?:&quot;&quot;&quot;|$)|&#39;(?:[^&#39;\\]|\\[\S\s])*(?:&#39;|$)|&quot;(?:[^&quot;\\]|\\[\S\s])*(?:&quot;|$))/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;&#39;\&quot;&quot;</span><span class="p">])</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">multiLineStrings</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^(?:&#39;(?:[^&#39;\\]|\\[\S\s])*(?:&#39;|$)|&quot;(?:[^&quot;\\]|\\[\S\s])*(?:&quot;|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/</span><span class="p">,</span></div><div class='line' id='LC10'><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;&#39;\&quot;`&quot;</span><span class="p">])</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^(?:&#39;(?:[^\n\r&#39;\\]|\\.)*(?:&#39;|$)|&quot;(?:[^\n\r&quot;\\]|\\.)*(?:&quot;|$))/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;\&quot;&#39;&quot;</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">verbatimStrings</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^@&quot;(?:[^&quot;]|&quot;&quot;)*(?:&quot;|$)/</span><span class="p">,</span><span class="nx">q</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hashComments</span><span class="p">;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">cStyleComments</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">])</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\n\r]*)/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^&lt;(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)&gt;/</span><span class="p">,</span><span class="nx">q</span><span class="p">]))</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^#[^\n\r]*/</span><span class="p">,</span></div><div class='line' id='LC11'><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">]));</span><span class="nx">a</span><span class="p">.</span><span class="nx">cStyleComments</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^\/\/[^\n\r]*/</span><span class="p">,</span><span class="nx">q</span><span class="p">]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^\/\*[\S\s]*?(?:\*\/|$)/</span><span class="p">,</span><span class="nx">q</span><span class="p">]));</span><span class="nx">a</span><span class="p">.</span><span class="nx">regexLiterals</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;lang-regex&quot;</span><span class="p">,</span><span class="sr">/^(?:^^\.?|[!+-]|!=|!==|#|%|%=|&amp;|&amp;&amp;|&amp;&amp;=|&amp;=|\(|\*|\*=|\+=|,|-=|-&gt;|\/|\/=|:|::|;|&lt;|&lt;&lt;|&lt;&lt;=|&lt;=|=|==|===|&gt;|&gt;=|&gt;&gt;|&gt;&gt;=|&gt;&gt;&gt;|&gt;&gt;&gt;=|[?@[^]|\^=|\^\^|\^\^=|{|\||\|=|\|\||\|\|=|~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/</span><span class="p">]);(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">types</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;typ&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">]);</span><span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">keywords</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^ | $/g</span><span class="p">,</span></div><div class='line' id='LC12'><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;kwd&quot;</span><span class="p">,</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(?:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\s,]+/g</span><span class="p">,</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)\\b&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">]);</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot; \r\n\t\xa0&quot;</span><span class="p">]);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;lit&quot;</span><span class="p">,</span><span class="sr">/^@[$_a-z][\w$@]*/i</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;typ&quot;</span><span class="p">,</span><span class="sr">/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^[$_a-z][\w$@]*/i</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;lit&quot;</span><span class="p">,</span><span class="sr">/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;0123456789&quot;</span><span class="p">],[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^\\[\S\s]?/</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="sr">/^.[^\s\w&quot;-$&#39;./@\\`]*/</span><span class="p">,</span><span class="nx">q</span><span class="p">]);</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span></div><div class='line' id='LC13'><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">case</span> <span class="mi">4</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">=</span><span class="nx">c</span><span class="p">;(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}}}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span></div><div class='line' id='LC14'><span class="k">for</span><span class="p">(;</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">;(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="sr">/(?:^|\s)nocode(?:\s|$)/</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="sr">/\r\n?|\n/</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;white-space&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pre&quot;</span><span class="o">===</span><span class="nx">l</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;LI&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">m</span><span class="o">===</span><span class="p">(</span><span class="nx">m</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span></div><div class='line' id='LC15'><span class="nx">m</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;OL&quot;</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;linenums&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">l</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;L&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="nx">n</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;\xa0&quot;</span><span class="p">)),</span><span class="nx">r</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">--</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;cannot override language handler %s&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">A</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="sr">/^\s*&lt;/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;default-markup&quot;</span><span class="o">:</span><span class="s2">&quot;default-code&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">A</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC16'><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="p">)(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="sr">/\bMSIE\b/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="sr">/\n/g</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">++</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">++</span><span class="p">])</span><span class="o">:</span><span class="nx">n</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="o">&lt;=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">f</span><span class="p">;)</span><span class="nx">b</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">s</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">s</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">))){</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="p">));</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">=</span></div><div class='line' id='LC17'><span class="nx">j</span><span class="p">;</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;SPAN&quot;</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">o</span><span class="p">)),</span><span class="nx">x</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">))}</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="mi">2</span><span class="p">);</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="mi">2</span><span class="p">)}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="s2">&quot;console&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">stack</span><span class="o">?</span><span class="nx">w</span><span class="p">.</span><span class="nx">stack</span><span class="o">:</span><span class="nx">w</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;break,continue,do,else,for,if,return,while&quot;</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="p">[[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile&quot;</span><span class="p">],</span></div><div class='line' id='LC18'><span class="s2">&quot;catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof&quot;</span><span class="p">],</span><span class="nx">F</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where&quot;</span><span class="p">],</span><span class="nx">G</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient&quot;</span><span class="p">],</span></div><div class='line' id='LC19'><span class="nx">H</span><span class="o">=</span><span class="p">[</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var&quot;</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN&quot;</span><span class="p">],</span><span class="nx">I</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None&quot;</span><span class="p">],</span></div><div class='line' id='LC20'><span class="nx">J</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END&quot;</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;case,done,elif,esac,eval,fi,function,in,local,set,then,until&quot;</span><span class="p">],</span><span class="nx">K</span><span class="o">=</span><span class="sr">/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="sr">/\S/</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="p">[</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END&quot;</span><span class="o">+</span></div><div class='line' id='LC21'><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">v</span><span class="p">],</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">A</span><span class="o">=</span><span class="p">{};</span><span class="nx">k</span><span class="p">(</span><span class="nx">O</span><span class="p">,[</span><span class="s2">&quot;default-code&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([],[[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^[^&lt;?]+/</span><span class="p">],[</span><span class="s2">&quot;dec&quot;</span><span class="p">,</span><span class="sr">/^&lt;!\w[^&gt;]*(?:&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^&lt;\!--[\S\s]*?(?:--\&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;lang-&quot;</span><span class="p">,</span><span class="sr">/^&lt;\?([\S\s]+?)(?:\?&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;lang-&quot;</span><span class="p">,</span><span class="sr">/^&lt;%([\S\s]+?)(?:%&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="sr">/^(?:&lt;[%?]|[%?]&gt;)/</span><span class="p">],[</span><span class="s2">&quot;lang-&quot;</span><span class="p">,</span><span class="sr">/^&lt;xmp\b[^&gt;]*&gt;([\S\s]+?)&lt;\/xmp\b[^&gt;]*&gt;/i</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^&lt;script\b[^&gt;]*&gt;([\S\s]*?)(&lt;\/script\b[^&gt;]*&gt;)/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span><span class="sr">/^&lt;style\b[^&gt;]*&gt;([\S\s]*?)(&lt;\/style\b[^&gt;]*&gt;)/i</span><span class="p">],[</span><span class="s2">&quot;lang-in.tag&quot;</span><span class="p">,</span><span class="sr">/^(&lt;\/?[a-z][^&lt;&gt;]*&gt;)/i</span><span class="p">]]),</span></div><div class='line' id='LC22'><span class="p">[</span><span class="s2">&quot;default-markup&quot;</span><span class="p">,</span><span class="s2">&quot;htm&quot;</span><span class="p">,</span><span class="s2">&quot;html&quot;</span><span class="p">,</span><span class="s2">&quot;mxml&quot;</span><span class="p">,</span><span class="s2">&quot;xhtml&quot;</span><span class="p">,</span><span class="s2">&quot;xml&quot;</span><span class="p">,</span><span class="s2">&quot;xsl&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot; \t\r\n&quot;</span><span class="p">],[</span><span class="s2">&quot;atv&quot;</span><span class="p">,</span><span class="sr">/^(?:&quot;[^&quot;]*&quot;?|&#39;[^&#39;]*&#39;?)/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;\&quot;&#39;&quot;</span><span class="p">]],[[</span><span class="s2">&quot;tag&quot;</span><span class="p">,</span><span class="sr">/^^&lt;\/?[a-z](?:[\w-.:]*\w)?|\/?&gt;$/i</span><span class="p">],[</span><span class="s2">&quot;atn&quot;</span><span class="p">,</span><span class="sr">/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i</span><span class="p">],[</span><span class="s2">&quot;lang-uq.val&quot;</span><span class="p">,</span><span class="sr">/^=\s*([^\s&quot;&#39;&gt;]*(?:[^\s&quot;&#39;/&gt;]|\/(?=\s)))/</span><span class="p">],[</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="sr">/^[/&lt;-&gt;]+/</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^on\w+\s*=\s*&quot;([^&quot;]+)&quot;/i</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^on\w+\s*=\s*&#39;([^&#39;]+)&#39;/i</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^on\w+\s*=\s*([^\s&quot;&#39;&gt;]+)/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span><span class="sr">/^style\s*=\s*&quot;([^&quot;]+)&quot;/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span><span class="sr">/^style\s*=\s*&#39;([^&#39;]+)&#39;/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span></div><div class='line' id='LC23'><span class="sr">/^style\s*=\s*([^\s&quot;&#39;&gt;]+)/i</span><span class="p">]]),[</span><span class="s2">&quot;in.tag&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([],[[</span><span class="s2">&quot;atv&quot;</span><span class="p">,</span><span class="sr">/^[\S\s]+/</span><span class="p">]]),[</span><span class="s2">&quot;uq.val&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">F</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">types</span><span class="o">:</span><span class="nx">K</span><span class="p">}),[</span><span class="s2">&quot;c&quot;</span><span class="p">,</span><span class="s2">&quot;cc&quot;</span><span class="p">,</span><span class="s2">&quot;cpp&quot;</span><span class="p">,</span><span class="s2">&quot;cxx&quot;</span><span class="p">,</span><span class="s2">&quot;cyc&quot;</span><span class="p">,</span><span class="s2">&quot;m&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="s2">&quot;null,true,false&quot;</span><span class="p">}),[</span><span class="s2">&quot;json&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">verbatimStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">types</span><span class="o">:</span><span class="nx">K</span><span class="p">}),[</span><span class="s2">&quot;cs&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;java&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;bsh&quot;</span><span class="p">,</span><span class="s2">&quot;csh&quot;</span><span class="p">,</span><span class="s2">&quot;sh&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">I</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tripleQuotedStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span></div><div class='line' id='LC24'><span class="p">[</span><span class="s2">&quot;cv&quot;</span><span class="p">,</span><span class="s2">&quot;py&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="s2">&quot;caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END&quot;</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;perl&quot;</span><span class="p">,</span><span class="s2">&quot;pl&quot;</span><span class="p">,</span><span class="s2">&quot;pm&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">J</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;rb&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;js&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="s2">&quot;all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes&quot;</span><span class="p">,</span></div><div class='line' id='LC25'><span class="nx">hashComments</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multilineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tripleQuotedStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;coffee&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([],[[</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^[\S\s]+/</span><span class="p">]]),[</span><span class="s2">&quot;regex&quot;</span><span class="p">]);</span><span class="nb">window</span><span class="p">.</span><span class="nx">prettyPrintOne</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;PRE&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">E</span><span class="p">({</span><span class="nx">g</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="nx">h</span><span class="p">});</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">};</span><span class="nb">window</span><span class="p">.</span><span class="nx">prettyPrint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">PR_SHOULD_USE_CONTINUATION</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">+</span><span class="mi">250</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">className</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;prettyprint&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC26'><span class="o">!</span><span class="nx">k</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">o</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="o">:</span><span class="nx">i</span><span class="o">===</span><span class="mi">3</span><span class="o">?</span><span class="nx">N</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">o</span><span class="o">:</span><span class="nx">o</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">o</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;CODE&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">tagName</span><span class="p">}</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">g</span><span class="p">));</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">o</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">o</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;pre&quot;</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;code&quot;</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;xmp&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;prettyprint&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">b</span><span class="o">||</span><span class="p">((</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\blinenums\b(?::(\d+))?/</span><span class="p">))</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">?+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">g</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">E</span><span class="p">(</span><span class="nx">d</span><span class="p">))}}</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span></div><div class='line' id='LC27'><span class="mi">250</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;pre&quot;</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;code&quot;</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;xmp&quot;</span><span class="p">)],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">k</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">;</span><span class="o">++</span><span class="nx">t</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">][</span><span class="nx">t</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nb">Date</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">now</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">now</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="sr">/\blang(?:uage)?-([\w.]+)(?!\S)/</span><span class="p">;</span><span class="nx">m</span><span class="p">()};</span><span class="nb">window</span><span class="p">.</span><span class="nx">PR</span><span class="o">=</span><span class="p">{</span><span class="nx">createSimpleLexer</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">registerLangHandler</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">sourceDecorator</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">PR_ATTRIB_NAME</span><span class="o">:</span><span class="s2">&quot;atn&quot;</span><span class="p">,</span><span class="nx">PR_ATTRIB_VALUE</span><span class="o">:</span><span class="s2">&quot;atv&quot;</span><span class="p">,</span><span class="nx">PR_COMMENT</span><span class="o">:</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="nx">PR_DECLARATION</span><span class="o">:</span><span class="s2">&quot;dec&quot;</span><span class="p">,</span><span class="nx">PR_KEYWORD</span><span class="o">:</span><span class="s2">&quot;kwd&quot;</span><span class="p">,</span><span class="nx">PR_LITERAL</span><span class="o">:</span><span class="s2">&quot;lit&quot;</span><span class="p">,</span></div><div class='line' id='LC28'><span class="nx">PR_NOCODE</span><span class="o">:</span><span class="s2">&quot;nocode&quot;</span><span class="p">,</span><span class="nx">PR_PLAIN</span><span class="o">:</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="nx">PR_PUNCTUATION</span><span class="o">:</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="nx">PR_SOURCE</span><span class="o">:</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">PR_STRING</span><span class="o">:</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="nx">PR_TAG</span><span class="o">:</span><span class="s2">&quot;tag&quot;</span><span class="p">,</span><span class="nx">PR_TYPE</span><span class="o">:</span><span class="s2">&quot;typ&quot;</span><span class="p">}})();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543527" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.06447s from fe16.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/xutaohit/heiniuhaha.github.com/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.06503' data-host='fe16'></span>
    
  </body>
</html>

